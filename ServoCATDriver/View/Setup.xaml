<!--
    Copyright © 2021 - 2021 George Hilios <ghilios+SERVOCAT@googlemail.com>

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.
-->
<Window
    x:Class="ASCOM.Joko.ServoCAT.View.Setup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rules="clr-namespace:ASCOM.Joko.ServoCAT.ValidationRules"
    xmlns:interfaces="clr-namespace:ASCOM.Joko.ServoCAT.Interfaces"
    xmlns:local="clr-namespace:ASCOM.Joko.ServoCAT.View"
    xmlns:localvm="clr-namespace:ASCOM.Joko.ServoCAT.ViewModel"
    xmlns:ts="clr-namespace:ToggleSwitch;assembly=ToggleSwitch"
    xmlns:util="clr-namespace:ASCOM.Joko.ServoCAT.Utility"
    x:Name="UC"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance localvm:SetupVM, IsDesignTimeCreatable=False}"
    ContentRendered="Window_ContentRendered"
    SizeToContent="WidthAndHeight"
    Background="{StaticResource PrimaryBackgroundBrush}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <GroupBox Grid.Row="0" Grid.Column="0" Grid.IsSharedSizeScope="True">
            <GroupBox.Header>
                <Grid Height="36" Margin="5">
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="18"
                        Text="Connection"
                        Style="{StaticResource GroupBoxHeaderTextLabel}" />
                </Grid>
            </GroupBox.Header>
            <Grid Margin="5">
                <Grid.Resources>
                    <Style x:Key="ShowOnSimulator" TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ServoCatOptions.ConnectionType}" Value="0">
                                <Setter Property="Height" Value="Auto" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="ShowOnSerial" TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ServoCatOptions.ConnectionType}" Value="1">
                                <Setter Property="Height" Value="Auto" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="SettingsCol0" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="SettingsCol1" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Style="{StaticResource ShowOnSerial}" />
                </Grid.RowDefinitions>
                <ComboBox
                    Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                    Margin="5,5,0,0"
                    Name="PART_ConnectionTypeList"
                    MinWidth="120"
                    ItemsSource="{Binding Source={util:EnumBindingSource {x:Type interfaces:ConnectionType}}}"
                    SelectedItem="{Binding ServoCatOptions.ConnectionType}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumStaticDescriptionValueConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock
                    Grid.Row="1" Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="5,5,0,0"
                    Text="Serial Port"
                    Style="{StaticResource PropertyTextLabel}" />
                <ComboBox
                    Grid.Row="1" Grid.Column="1"
                    Margin="5,5,0,0"
                    ItemsSource="{Binding AvailableCOMPorts}"
                    SelectedItem="{Binding ServoCatOptions.SerialPort}" />
            </Grid>
        </GroupBox>
        <GroupBox Grid.Row="1" Grid.Column="0" Grid.IsSharedSizeScope="True">
            <GroupBox.Header>
                <Grid Height="36" Margin="5">
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="18"
                        Text="Coordinates"
                        Style="{StaticResource GroupBoxHeaderTextLabel}" />
                </Grid>
            </GroupBox.Header>
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="SettingsCol0" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="SettingsCol1" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Row="0" Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="5,5,0,0"
                    Text="Latitude"
                    Style="{StaticResource PropertyTextLabel}" />
                <TextBox
                    Grid.Row="0" Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    MinWidth="60"
                    Margin="5,5,0,0"
                    Style="{StaticResource InputTextBox}"
                    Validation.Error="InputValidation_Error">
                    <Binding Path="ServoCatOptions.Latitude" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <rules:DoubleRangeRule>
                                <rules:DoubleRangeRule.ValidRange>
                                    <rules:DoubleRangeChecker Maximum="90" Minimum="-90" />
                                </rules:DoubleRangeRule.ValidRange>
                            </rules:DoubleRangeRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBlock
                    Grid.Row="1" Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="5,5,0,0"
                    Text="Longitude"
                    Style="{StaticResource PropertyTextLabel}" />
                <TextBox
                    Grid.Row="1" Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    MinWidth="60"
                    Margin="5,5,0,0"
                    Style="{StaticResource InputTextBox}"
                    Validation.Error="InputValidation_Error">
                    <Binding Path="ServoCatOptions.Longitude" UpdateSourceTrigger="LostFocus" NotifyOnValidationError="True">
                        <Binding.ValidationRules>
                            <rules:DoubleRangeRule>
                                <rules:DoubleRangeRule.ValidRange>
                                    <rules:DoubleRangeChecker Maximum="180" Minimum="-180" />
                                </rules:DoubleRangeRule.ValidRange>
                            </rules:DoubleRangeRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>
                <TextBlock
                    Grid.Row="2" Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Margin="5,5,0,0"
                    Text="Elevation"
                    Style="{StaticResource PropertyTextLabel}" />
                <TextBox
                    Grid.Row="2" Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    MinWidth="60"
                    Margin="5,5,0,0"
                    Text="{Binding ServoCatOptions.Elevation, NotifyOnValidationError=True}"
                    Validation.Error="InputValidation_Error"
                    Style="{StaticResource InputTextBox}" />
                <ts:HorizontalToggleSwitch
                    Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                    UncheckedContent="JNOW"
                    CheckedContent="J2000"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,5,0,0"
                    IsChecked="{Binding ServoCatOptions.UseJ2000}" />
            </Grid>
        </GroupBox>
        <StackPanel
            Grid.Row="2" Grid.Column="0"
            Margin="10"
            Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Button
                Margin="2"
                IsDefault="True"
                Click="Button_OK_Click"
                IsEnabled="{Binding ElementName=UC, Path=ValidationErrors, Converter={StaticResource ZeroToBooleanConverter}}">
                <TextBlock Text="OK" Margin="5,0,5,0" />
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ActionButton}">
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtName}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button
                Style="{StaticResource ActionButton}"
                Margin="2"
                IsCancel="True"
                Click="Button_Cancel_Click">
                <TextBlock Text="Cancel" Margin="5,0,5,0" />
            </Button>
        </StackPanel>
    </Grid>
</Window>